<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaProjectS13.dao.MemberDAO">
	
	
	<select id="memberMidCheck" resultType = "com.spring.javaProjectS13.vo.MemberVO">
		select * from member where mid = #{mid};
	</select>
	<select id="memberNickCheck" resultType = "com.spring.javaProjectS13.vo.MemberVO">
		select * from member where nickName = #{nickName};
	</select>
	<select id="memberEmailCheck" resultType = "com.spring.javaProjectS13.vo.MemberVO">
		select * from member where email = #{email};
	</select>
	<select id="friendList" resultType = "com.spring.javaProjectS13.vo.MemberVO">
		select *,(select count(*) from login where memberIdx = member.idx) as login, 
		(select count(*) from alarm where memberIdx = #{idx} and alarmType = 'chat' and alarmTypeIdx = concat(least(#{idx},member.idx),'/',greatest(#{idx},member.idx)) and readCheck = '안읽음') as alarmCnt 
		from member where idx in (select member2idx from relation where member1idx = #{idx} and state = 2) order by login desc, nickName;
	</select>
	<select id="memberList" resultType = "com.spring.javaProjectS13.vo.MemberVO">
		select *,(select count(*) from login where memberIdx = member.idx) as login from member where ${vo.searchType} like '%${vo.searchString}%' 
		<if test="vo.fromDate!=''">and <![CDATA[date_format(joinDate,'%Y-%m-%d') >= #{vo.fromDate}]]> </if>
		<if test="vo.toDate!=''">and <![CDATA[date_format(joinDate,'%Y-%m-%d') <= #{vo.toDate}]]> </if>
		<if test="vo.level!=-1"> and level = #{vo.level} </if>
		order by idx desc limit #{vo.startIndexNo},#{vo.pageSize};
	</select>
	<select id="memberIdxSearch" resultType = "com.spring.javaProjectS13.vo.MemberVO">
		select * from member where idx = #{idx};
	</select>
	<select id="memberTotRecCnt" resultType = "int">
		select count(*) from member where ${vo.searchType} like '%${vo.searchString}%' 
		<if test="vo.fromDate!=''">and <![CDATA[date_format(joinDate,'%Y-%m-%d') >= #{vo.fromDate}]]> </if>
		<if test="vo.toDate!=''">and <![CDATA[date_format(joinDate,'%Y-%m-%d') <= #{vo.toDate}]]> </if>
		<if test="vo.level!=-1"> and level = #{vo.level}; </if>
	</select>
	<select id="memberListIdx" resultType = "com.spring.javaProjectS13.vo.MemberVO">
		select * from member where idx in (${idxArray})
	</select>
	<select id="chatList" resultType = "com.spring.javaProjectS13.vo.ChatVO">
		select * from chat where roomNumber = #{roomNumber}
	</select>
		
	
	<insert id="memberJoin">
		insert into member values (default,#{vo.mid},#{vo.pwd},#{vo.nickName},#{vo.name},#{vo.email},#{vo.gender}
		,default,default,null,default,default,default,default,default,default,null);
	</insert>
	<insert id="memberLoginOk">
		insert into login (memberIdx) values(#{idx});
	</insert>
	<insert id="saveChat">
		insert into chat values (default,#{memberIdx},null,#{roomNumber},#{message},now())
	</insert>
	<insert id="inputAlarm">
		insert into alarm values (default,#{memberIdx},#{alarmType},#{alarmTypeIdx},now(),default)
	</insert>
	
	
	<update id="nickNameUpdate">
		update member set nickName = #{nickName} where mid = #{mid};
	</update>
	<update id="memnberNameUpdate">
		update member set name = #{name} where mid = #{mid};
	</update>
	<update id="emailUpdate">
		update member set email = #{email} where mid = #{mid};
	</update>
	<update id="memberVisitPointExpUpdate">
		<if test="flag == 'levelUp'">
			update member set visitCnt = visitCnt + 1, point = point + 1, exp = 0, level = level + 1, lastDate = now() where idx = #{idx};
		</if>
		<if test="flag != 'levelUp'">
			update member set visitCnt = visitCnt + 1, point = point + 1, exp = exp + 1, lastDate = now() where idx = #{idx};
		</if>
	</update>
	<update id="memberLastDateUpdate">
		update member set lastDate = now() where idx = #{idx};
	</update>
	<update id="memberPwdChange">
		update member set pwd = #{pwd} where mid = #{mid};
	</update>
	<update id="memberDelete">
		update member set level = 0, userDel = #{why} where mid = #{mid};
	</update>
	<update id="profileChange">
		update member set profile = #{profile} where mid = #{mid};
	</update>
	<update id="memberUpdate">
		update member set mid = #{vo.mid}, nickName = #{vo.nickName}, name = #{vo.name}, email = #{vo.email}, level = #{vo.level}, point = #{vo.point} where idx = #{vo.idx};
	</update>
	<update id="inputKeyword">
		<if test="keyword==''">
			update member set keyword = null where idx = #{idx}
		</if>
		<if test="keyword!=''">
			update member set keyword = #{keyword} where idx = #{idx}
		</if>
	</update>
	<update id="readAlarm">
		update alarm set readCheck = '읽음' where alarmType = 'chat' and memberIdx = #{memberIdx} and alarmTypeIdx = #{alarmTypeIdx}
	</update>
		
	
	<delete id="memberLogoutOk">
		delete from login where memberIdx = #{memberIdx};
	</delete>
	<delete id="deleteAllLogin">
		delete from login;
	</delete>
	<delete id="selectedMemberDelete">
		delete from member where idx in (${idxArray});
	</delete>
	
	
</mapper>