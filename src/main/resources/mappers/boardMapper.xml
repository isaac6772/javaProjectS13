<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaProjectS13.dao.BoardDAO">
	
	
	<select id="boardList" resultType = "com.spring.javaProjectS13.vo.BoardVO">
		<if test="vo.searchType=='all'">
			select *,(select count(*) from reply where reply.boardIdx = board.idx) as replyCnt, 
			(select level from member where idx = board.memberIdx) as level,dateDiff(now(),writeDate) as dateDiff, case when <![CDATA[content like '%src="%']]> then 1 else 0 end as imgCheck from board 
			where (nickName like '%${vo.searchString}%' or title like '%${vo.searchString}%' or contentText like '%${vo.searchString}%') 
			<if test="vo.part!='전체'">and part = #{vo.part} </if> 
			<if test="vo.scope=='추천글'">and <![CDATA[good >= 10]]> </if> 
			<if test="vo.scope=='공지'">and part = '공지' </if>  
			<if test="vo.fromDate!=''">and <![CDATA[date_format(writeDate,'%Y-%m-%d') >= #{vo.fromDate}]]> </if>
			<if test="vo.toDate!=''">and <![CDATA[date_format(writeDate,'%Y-%m-%d') <= #{vo.toDate}]]> </if>
			<if test="vo.level!=-1"> and level = #{vo.level} </if>
			order by idx desc limit #{vo.startIndexNo},#{vo.pageSize} 
		</if>
		<if test="vo.searchType!='all'">
			select *,(select count(*) from reply where reply.boardIdx = board.idx) as replyCnt, 
			(select level from member where idx = board.memberIdx) as level,dateDiff(now(),writeDate) as dateDiff, case when <![CDATA[content like '%src="%']]> then 1 else 0 end as imgCheck from board 
			where ${vo.searchType} like '%${vo.searchString}%' 
			<if test="vo.part!='전체'">and part = #{vo.part} </if> 
			<if test="vo.scope=='추천글'">and <![CDATA[good >= 10]]> </if> 
			<if test="vo.scope=='공지'">and part = '공지' </if> 
			<if test="vo.fromDate!=''">and <![CDATA[date_format(writeDate,'%Y-%m-%d') >= #{vo.fromDate}]]> </if>
			<if test="vo.toDate!=''">and <![CDATA[date_format(writeDate,'%Y-%m-%d') <= #{vo.toDate}]]> </if>
			<if test="vo.level!=-1"> and level = #{vo.level} </if>
			order by idx desc limit #{vo.startIndexNo},#{vo.pageSize} 
		</if>
	</select>
	<select id="totRecCnt" resultType = "int">
		<if test="vo.searchType=='all'">
			select count(*) from board where (nickName like '%${vo.searchString}%' or title like '%${vo.searchString}%' or contentText like '%${vo.searchString}%') 
			<if test="vo.part!='전체'">and part = #{vo.part} </if> 
			<if test="vo.scope=='추천글'">and <![CDATA[good >= 10]]> </if> 
			<if test="vo.scope=='공지'">and part = '공지' </if>  
			<if test="vo.fromDate!=''">and <![CDATA[date_format(writeDate,'%Y-%m-%d') >= #{vo.fromDate}]]> </if>
			<if test="vo.toDate!=''">and <![CDATA[date_format(writeDate,'%Y-%m-%d') <= #{vo.toDate}]]> </if>
			<if test="vo.level!=-1"> and level = #{vo.level} </if>
			order by idx desc 
		</if>
		<if test="vo.searchType!='all'">
			select count(*) from board where ${vo.searchType} like '%${vo.searchString}%' 
			<if test="vo.part!='전체'">and part = #{vo.part} </if> 
			<if test="vo.scope=='추천글'">and <![CDATA[good >= 10]]> </if> 
			<if test="vo.scope=='공지'">and part = '공지' </if> 
			<if test="vo.fromDate!=''">and <![CDATA[date_format(writeDate,'%Y-%m-%d') >= #{vo.fromDate}]]> </if>
			<if test="vo.toDate!=''">and <![CDATA[date_format(writeDate,'%Y-%m-%d') <= #{vo.toDate}]]> </if>
			<if test="vo.level!=-1"> and level = #{vo.level} </if>
			order by idx desc 
		</if>
	</select>
	<select id="informList" resultType = "com.spring.javaProjectS13.vo.BoardVO">
		select board.*,member.level,(select count(*) from reply where reply.boardIdx = board.idx) as replyCnt from board join member on board.part = '공지' and board.memberIdx = member.idx order by board.idx desc limit 0,5;
	</select>
	<select id="boardContent" resultType = "com.spring.javaProjectS13.vo.BoardVO">
		select board.*, member.profile, member.level, 
		(select b.idx from board b where <![CDATA[b.idx < board.idx]]> order by b.idx desc limit 1) as nextIdx, 
		(select b.idx from board b where <![CDATA[b.idx > board.idx]]> limit 1) as prevIdx 
		from board join member 
		on board.idx = #{idx} and board.memberIdx = member.idx;
	</select>
	<select id="contentReply" resultType = "com.spring.javaProjectS13.vo.ReplyVO">
		select reply.*,member.profile from reply join member on reply.boardType = 'board' and reply.boardIdx = #{idx} and member.idx = reply.memberIdx;
	</select>
	<select id="getReply" resultType = "com.spring.javaProjectS13.vo.ReplyVO">
		select * from reply where idx = #{idx}
	</select>
	<select id="getViewNum" resultType = "com.spring.javaProjectS13.vo.ViewNumVO">
		select * from viewNum where boardType = 'board' and boardIdx = #{idx} and memberIdx = #{memberIdx}
	</select>
	<select id="getRecommend" resultType = "com.spring.javaProjectS13.vo.RecommendVO">
		select * from recommend where boardType = 'board' and boardIdx = #{boardIdx} and memberIdx = #{memberIdx}
	</select>
	<select id="reportConfirm" resultType = "int">
		select count(*) from report where reportType = #{reportType} and reportIdx = #{reportIdx} and reporter = #{reporter}
	</select>
	
	
	<insert id="boardInput">
		insert into board values (default,#{vo.memberIdx},#{vo.nickName},#{vo.title},#{vo.content},#{vo.contentText},#{vo.part},0,0,0,default);
	</insert>
	<insert id="inputReply">
		insert into reply values (default,#{vo.memberIdx},#{vo.nickName},'board',#{vo.boardIdx},#{vo.content},default,#{vo.replyIdx})
	</insert>
	<insert id="setViewNum">
		insert into viewNum values (default,'board',#{boardIdx},#{memberIdx},now())
	</insert>
	<insert id="setRecommend">
		insert into recommend values (default,'board',#{idx},#{memberIdx},#{flag})
	</insert>
	<insert id="replyAlarm">
		insert into alarm values (default,#{memberIdx},#{memberIdxWho},'boardReply',#{idx},now(),default)
	</insert>
	<insert id="report">
		insert into report values (default,#{vo.reportType},#{vo.reportIdx},#{vo.memberIdx},#{vo.part},#{vo.content},now(),#{vo.reporter},null)
	</insert>
	
	
	<update id="boardUpdate">
		update board set nickName = #{vo.nickName}, title = #{vo.title}, content = #{vo.content}, contentText = #{vo.contentText}, part = #{vo.part}, writeDate = now() where idx = #{vo.idx}
	</update>
	<update id="updateReply">
		update reply set content = #{vo.content}, writeDate = now() where idx = #{vo.idx};
	</update>
	<update id="ViewNumPlus">
		update board set viewNum = viewNum + 1 where idx = #{idx}
	</update>
	<update id="updateViewNum">
		update viewNum set viewDate = now() where idx = #{idx}
	</update>
	<update id="updateRecommend">
		update recommend set flag = #{flag} where idx = #{idx}
	</update>
	<update id="boardRecommendUpdate">
		update board set ${field} = ${field} <if test="flag==1">+1</if> <if test="flag==-1">-1</if> where idx = #{idx}
	</update>
	
	
	<delete id="boardDelete">
		delete from board where idx = #{idx}
	</delete>
	<delete id="deleteReply">
		delete from reply where idx = #{idx}
	</delete>
	<delete id="cancelRecommend">
		delete from recommend where boardType = 'board' and boardIdx = #{idx} and memberIdx = #{memberIdx}
	</delete>
	<delete id="deleteBoardReply">
		delete from reply where boardType = 'board' and boardIdx = #{idx}
	</delete>
	
</mapper>